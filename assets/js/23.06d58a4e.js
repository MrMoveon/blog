(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{247:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git常用操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作","aria-hidden":"true"}},[t._v("#")]),t._v(" git常用操作")]),t._v(" "),s("h2",{attrs:{id:"把远程仓库取到本地"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#把远程仓库取到本地","aria-hidden":"true"}},[t._v("#")]),t._v(" 把远程仓库取到本地")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone 地址\n")])])]),s("p",[t._v("Git 就会把你的远程仓库 clone 到本地。在这个过程中，你可能会需要输入你的 GitHub 用户名和密码：")]),t._v(" "),s("p",[t._v("输入正确的用户名和密码以后，你会看到你的当前目录下多了一个新的子目录，它的名字和刚才新建的 GitHub 仓库名一致")]),t._v(" "),s("h2",{attrs:{id:"git常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令","aria-hidden":"true"}},[t._v("#")]),t._v(" git常用命令")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("git log")]),t._v("  查看操作日志")]),t._v(" "),s("li",[s("code",[t._v("git status")]),t._v("  查看工作目录当前状态的指令")]),t._v(" "),s("li",[s("code",[t._v("git add")]),t._v(" 文件名    添加文件到暂存区       "),s("code",[t._v("git add .")]),t._v("   添加所有文件")]),t._v(" "),s("li",[s("code",[t._v("git commit -m")]),t._v(" 描述    提交及描述")]),t._v(" "),s("li",[s("code",[t._v("git push")]),t._v("   发布到中央仓库")]),t._v(" "),s("li",[s("code",[t._v("git pull")]),t._v("   拉取中央仓库代码")]),t._v(" "),s("li",[s("code",[t._v("git config --list")]),t._v("  查看配置项")]),t._v(" "),s("li",[s("code",[t._v("git remote add origin http://xxx")]),t._v("  添加远程地址")]),t._v(" "),s("li",[s("code",[t._v("git remote -v")]),t._v("  .查看本地添加了哪些远程地址")]),t._v(" "),s("li",[s("code",[t._v("git remote remove origin")]),t._v("  移除远程地址")])]),t._v(" "),s("h2",{attrs:{id:"设置用户名、邮箱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置用户名、邮箱","aria-hidden":"true"}},[t._v("#")]),t._v(" 设置用户名、邮箱")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("git config user.name '用户名'")])]),t._v(" "),s("li",[s("code",[t._v("git config user.email '邮箱'")])])]),t._v(" "),s("h2",{attrs:{id:"branch-的创建、切换和删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#branch-的创建、切换和删除","aria-hidden":"true"}},[t._v("#")]),t._v(" branch 的创建、切换和删除")]),t._v(" "),s("ol",[s("li",[t._v("创建  branch 的方式是  git branch 名称  或  git checkout -b 名称 （创建后自动切换）；")]),t._v(" "),s("li",[t._v("切换的方式是  git checkout 名称；")]),t._v(" "),s("li",[t._v("删除的方式是  git branch -d 名称。")])]),t._v(" "),s("h2",{attrs:{id:"branch-的合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#branch-的合并","aria-hidden":"true"}},[t._v("#")]),t._v(" branch 的合并")]),t._v(" "),s("p",[s("strong",[t._v("假如我们现在在dev分支上，刚开发完项目，执行了下列命令：")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("  commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'提交的备注信息'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("  push -u origin dev\n")])])]),s("p",[s("strong",[t._v("想将dev分支合并到master分支，操作如下：")])]),t._v(" "),s("ol",[s("li",[t._v("首先切换到master分支上")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("如果是多人开发的话 需要把远程master上的代码pull下来")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("然后我们把dev分支的代码合并到master上")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("然后查看状态及执行提交命令")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n\nOn branch master\nYour branch is ahead of "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'origin/master'")]),t._v(" by "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" commits.\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git push"')]),t._v(" to publish your "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" commits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnothing to commit, working tree clean\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上面的意思就是你有12个commit，需要push到远程master上 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 最后执行下面提交命令\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n")])])]),s("p",[t._v("5.其他命令")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新远程分支列表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote update origin --prune\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看所有分支")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -a\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程分支Chapater6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete Chapater6\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地分支 Chapater6")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d  Chapater6\n")])])]),s("h2",{attrs:{id:"push总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push总结","aria-hidden":"true"}},[t._v("#")]),t._v(" push总结")]),t._v(" "),s("ol",[s("li",[t._v("push 是把当前的分支上传到远程仓库，并把这个 branch 的路径上的所有 commits 也一并上传。")]),t._v(" "),s("li",[t._v("push 的时候，如果当前分支是一个本地创建的分支，需要指定远程仓库名和分支名，用 git push origin branch_name 的格式，而不能只用 git push；或者可以通过 git config 修改 push.default 来改变 push 时的行为逻辑。")]),t._v(" "),s("li",[t._v("push 的时候之后上传当前分支，并不会上传 HEAD；远程仓库的 HEAD 是永远指向默认分支（即 master）的。")])])])},[],!1,null,null,null);a.default=n.exports}}]);